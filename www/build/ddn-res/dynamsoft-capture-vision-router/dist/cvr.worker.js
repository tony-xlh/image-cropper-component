/*!
 * Dynamsoft JavaScript Library
 * @product Dynamsoft Capture Vision Router JS Edition
 * @website http://www.dynamsoft.com
 * @copyright Copyright 2023, Dynamsoft Corporation
 * @author Dynamsoft
 * @version "2.0.20-dev-20231215173430"
 * @fileoverview Dynamsoft JavaScript Library for Capture Vision
 * More info on cvr JS: https://www.dynamsoft.com/capture-vision-router/sdk-javascript/
 */
!function(){"use strict";async function e(e,t){return await new Promise(((s,r)=>{let n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType=t,n.send(),n.onloadend=async()=>{s(n.response)},n.onerror=()=>{r(new Error("Network Error: "+n.statusText))}}))}const t="function"==typeof BigInt;var s,r;!function(e){e[e.IRUT_NULL=0]="IRUT_NULL",e[e.IRUT_COLOUR_IMAGE=1]="IRUT_COLOUR_IMAGE",e[e.IRUT_SCALED_DOWN_COLOUR_IMAGE=2]="IRUT_SCALED_DOWN_COLOUR_IMAGE",e[e.IRUT_GRAYSCALE_IMAGE=4]="IRUT_GRAYSCALE_IMAGE",e[e.IRUT_TRANSOFORMED_GRAYSCALE_IMAGE=8]="IRUT_TRANSOFORMED_GRAYSCALE_IMAGE",e[e.IRUT_ENHANCED_GRAYSCALE_IMAGE=16]="IRUT_ENHANCED_GRAYSCALE_IMAGE",e[e.IRUT_PREDETECTED_REGIONS=32]="IRUT_PREDETECTED_REGIONS",e[e.IRUT_BINARY_IMAGE=64]="IRUT_BINARY_IMAGE",e[e.IRUT_TEXTURE_DETECTION_RESULT=128]="IRUT_TEXTURE_DETECTION_RESULT",e[e.IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE=256]="IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE",e[e.IRUT_TEXTURE_REMOVED_BINARY_IMAGE=512]="IRUT_TEXTURE_REMOVED_BINARY_IMAGE",e[e.IRUT_CONTOURS=1024]="IRUT_CONTOURS",e[e.IRUT_LINE_SEGMENTS=2048]="IRUT_LINE_SEGMENTS",e[e.IRUT_TEXT_ZONES=4096]="IRUT_TEXT_ZONES",e[e.IRUT_TEXT_REMOVED_BINARY_IMAGE=8192]="IRUT_TEXT_REMOVED_BINARY_IMAGE",e[e.IRUT_CANDIDATE_BARCODE_ZONES=16384]="IRUT_CANDIDATE_BARCODE_ZONES",e[e.IRUT_LOCALIZED_BARCODES=32768]="IRUT_LOCALIZED_BARCODES",e[e.IRUT_SCALED_UP_BARCODE_IMAGE=65536]="IRUT_SCALED_UP_BARCODE_IMAGE",e[e.IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE=131072]="IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE",e[e.IRUT_COMPLEMENTED_BARCODE_IMAGE=262144]="IRUT_COMPLEMENTED_BARCODE_IMAGE",e[e.IRUT_DECODED_BARCODES=524288]="IRUT_DECODED_BARCODES",e[e.IRUT_LONG_LINES=1048576]="IRUT_LONG_LINES",e[e.IRUT_CORNERS=2097152]="IRUT_CORNERS",e[e.IRUT_CANDIDATE_QUAD_EDGES=4194304]="IRUT_CANDIDATE_QUAD_EDGES",e[e.IRUT_DETECTED_QUADS=8388608]="IRUT_DETECTED_QUADS",e[e.IRUT_LOCALIZED_TEXT_LINES=16777216]="IRUT_LOCALIZED_TEXT_LINES",e[e.IRUT_RECOGNIZED_TEXT_LINES=33554432]="IRUT_RECOGNIZED_TEXT_LINES",e[e.IRUT_NORMALIZED_IMAGES=67108864]="IRUT_NORMALIZED_IMAGES",e[e.IRUT_ALL=134217727]="IRUT_ALL"}(s||(s={})),function(e){e[e.CRIT_ORIGINAL_IMAGE=1]="CRIT_ORIGINAL_IMAGE",e[e.CRIT_BARCODE=2]="CRIT_BARCODE",e[e.CRIT_TEXT_LINE=4]="CRIT_TEXT_LINE",e[e.CRIT_DETECTED_QUAD=8]="CRIT_DETECTED_QUAD",e[e.CRIT_NORMALIZED_IMAGE=16]="CRIT_NORMALIZED_IMAGE",e[e.CRIT_PARSED_RESULT=32]="CRIT_PARSED_RESULT"}(r||(r={}));let n,_,a,i,E=null;self.cvrWorkerVersion="2.0.20-dev-20231215173430";const T=e=>{for(let t in e.stageSet){const r=e.stageSet[t];for(let e=0;e<r.length;e++)if([s.IRUT_BINARY_IMAGE,s.IRUT_COLOUR_IMAGE,s.IRUT_COMPLEMENTED_BARCODE_IMAGE,s.IRUT_DEFORMATION_RESISTED_BARCODE_IMAGE,s.IRUT_ENHANCED_GRAYSCALE_IMAGE,s.IRUT_GRAYSCALE_IMAGE,s.IRUT_SCALED_DOWN_COLOUR_IMAGE,s.IRUT_SCALED_UP_BARCODE_IMAGE,s.IRUT_TEXTURE_REMOVED_BINARY_IMAGE,s.IRUT_TEXTURE_REMOVED_GRAYSCALE_IMAGE,s.IRUT_TEXT_REMOVED_BINARY_IMAGE,s.IRUT_TRANSOFORMED_GRAYSCALE_IMAGE].includes(r[e].result.unitType)){let t=r[e].result.imageData.bytes;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length)),r[e].result.imageData.bytes=t}else if([s.IRUT_CONTOURS].includes(r[e].result.unitType)){let t=r[e].result.contours,s=r[e].result.contoursOffset;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length)),s=new Uint8Array(new Uint8Array(HEAP8.buffer,s.ptr,s.length));const n=new DataView(t.buffer),_=[];for(let e=0;e<t.length;e+=4)_.push(n.getInt32(e,!0));const a=new DataView(s.buffer),i=[1];for(let e=0;e<s.length;e+=4)i.push(a.getInt32(e,!0));const E=[];for(let e=0;e<i.length-1;e++){const t={points:[]};for(let s=i[e];s<i[e+1];s+=2)t.points.push({x:_[s-1],y:_[s]});E.push(t)}r[e].result.contours=E,delete r[e].result.contoursOffset}else if([s.IRUT_LINE_SEGMENTS].includes(r[e].result.unitType)){let t=r[e].result.lineSegments;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),n=[];for(let e=0;e<t.length;e+=4)n.push(s.getInt32(e,!0));const _=[];for(let e=0;e<n.length;e+=4){const t={startPoint:{x:n[e],y:n[e+1]},endPoint:{x:n[e+2],y:n[e+3]}};_.push(t)}r[e].result.lineSegments=_}else if([s.IRUT_CANDIDATE_QUAD_EDGES].includes(r[e].result.unitType)){let t=r[e].result.candidateQuadEdges;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),n=[];for(let e=0;e<t.length;e+=4)n.push(s.getInt32(e,!0));const _=[];for(let e=0;e<n.length;e+=22){const t={startCorner:{intersection:{x:n[e],y:n[e+1]},line1:{startPoint:{x:n[e+2],y:n[e+3]},endPoint:{x:n[e+4],y:n[e+5]}},line2:{startPoint:{x:n[e+6],y:n[e+7]},endPoint:{x:n[e+8],y:n[e+9]}},type:n[e+10]},endCorner:{intersection:{x:n[e+11],y:n[e+12]},line1:{startPoint:{x:n[e+13],y:n[e+14]},endPoint:{x:n[e+15],y:n[e+16]}},line2:{startPoint:{x:n[e+17],y:n[e+18]},endPoint:{x:n[e+19],y:n[e+20]}},type:n[e+21]}};_.push(t)}r[e].result.candidateQuadEdges=_}else if([s.IRUT_CORNERS].includes(r[e].result.unitType)){let t=r[e].result.corners;t=new Uint8Array(new Uint8Array(HEAP8.buffer,t.ptr,t.length));const s=new DataView(t.buffer),n=[];for(let e=0;e<t.length;e+=4)n.push(s.getInt32(e,!0));const _=[];for(let e=0;e<n.length;e+=11){const t={intersection:{x:n[e],y:n[e+1]},line1:{startPoint:{x:n[e+2],y:n[e+3]},endPoint:{x:n[e+4],y:n[e+5]}},line2:{startPoint:{x:n[e+6],y:n[e+7]},endPoint:{x:n[e+8],y:n[e+9]}},type:n[e+10]};_.push(t)}r[e].result.corners=_}}};Object.assign(mapController,{cvr_createInstance:async(t,s)=>{try{let t=wasmImports.emscripten_bind_CvrWasm_CvrWasm_0();if(engineResourcePaths.dbr){const s=await e(engineResourcePaths.dbr+"DBR-PresetTemplates.json","text");n=s,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(t,es(s))}if(engineResourcePaths.dlr){const s=await e(engineResourcePaths.dlr+"DLR-PresetTemplates.json","text");_=s,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(t,es(s))}if(engineResourcePaths.ddn){const s=await e(engineResourcePaths.ddn+"DDN-PresetTemplates.json","text");a=s,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(t,es(s))}if(engineResourcePaths.dcp){const s=await e(engineResourcePaths.dcp+"MRZ-templates.json","text");i=s,ep(),wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(t,es(s))}wasmImports.emscripten_bind_CvrWasm_InitParameter_0(t);let r=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CoreWasm_GetModuleVersion_0())).CVR;handleTaskRes(s,{instanceID:t,version:r})}catch(e){handleTaskErr(s,e)}},cvr_initSettings:async(e,t,s)=>{let r;try{ep(),r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_InitSettings_1(s,es(e.settings))),handleTaskRes(t,{success:!0,response:r})}catch(e){handleTaskErr(t,e)}},cvr_setCrrRegistry:async(e,t,s)=>{try{ep(),wasmImports.emscripten_bind_CvrWasm_SetCrrRegistry_1(s,es(e.receiver)),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_startCapturing:async(e,t,s)=>{let r=!1;try{ep();r=1===JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(s,es(e.templateName)))).CaptureVisionTemplates[0].OutputOriginalImage}catch(e){handleTaskErr(t,e)}handleTaskRes(t,{success:!0,bNeedOutputOriginalImage:r})},cvr_clearVerifyList:(e,t,s)=>{try{wasmImports.emscripten_bind_CvrWasm_ClearVerifyList_0(s),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_getIntermediateResult:(e,s,r)=>{let n={};try{n=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetIntermediateResult_0(r)),((e,s)=>t&&["format","possibleFormats"].includes(e)&&BigInt(s)>Number.MAX_SAFE_INTEGER?BigInt(s):s)),T(n)}catch(e){handleTaskErr(s,e)}handleTaskRes(s,{success:!0,result:n})},cvr_capture:async(e,s,n)=>{let _,a,i;await checkAndReauth(),log(`time worker get msg: ${Date.now()}`);try{E&&(wasmImports.emscripten_bind_Destory_CImageData(E),E=null),E=wasmImports.emscripten_bind_Create_CImageData(e.bytes.length,setBufferIntoWasm(e.bytes,0),e.width,e.height,e.stride,e.format,0),log(`start worker capture: ${Date.now()}`),ep(),a=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_Capture_3(n,E,es(e.templateName),e.bScanner));let s=Date.now();log(`end worker capture: ${s}`),a=JSON.parse(a,((e,s)=>t&&"format"===e&&BigInt(s)>Number.MAX_SAFE_INTEGER?BigInt(s):s));let I=Date.now();log("capture result parsed: "+(I-s));for(let e=0;e<a.items.length;e++)[r.CRIT_NORMALIZED_IMAGE].includes(a.items[e].type)&&(i=a.items[e].imageData.bytes,i=new Uint8Array(new Uint8Array(HEAP8.buffer,i.ptr,i.length)),a.items[e].imageData.bytes=i);let R=Date.now();log("result new Uint8Array: "+(R-I)),e.bScanner&&(_=JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetIntermediateResult_0(n)),((e,s)=>t&&["format","possibleFormats"].includes(e)&&BigInt(s)>Number.MAX_SAFE_INTEGER?BigInt(s):s)),T(_),a.intermediateResult=_);let c=Date.now();log("get intermediate result: "+(c-R))}catch(e){return void handleTaskErr(s,e)}log(`time worker return msg: ${Date.now()}`),postMessage({type:"task",id:s,body:{success:!0,bytes:e.bytes,captureResult:a}},[e.bytes.buffer])},cvr_outputSettings:async(e,t,s)=>{let r;try{ep(),r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(s,es(e.templateName))),handleTaskRes(t,{success:!0,settings:r})}catch(e){handleTaskErr(t,e)}},cvr_getSimplifiedSettings:async(e,t,s)=>{let r;try{ep(),r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_GetSimplifiedSettings_1(s,es(e.templateName))),handleTaskRes(t,{success:!0,settings:r})}catch(e){handleTaskErr(t,e)}},cvr_updateSettings:async(e,s,r)=>{let n,_;try{let a=e.settings;const i=e.templateName;t&&"object"==typeof a&&a.hasOwnProperty("barcodeSettings")&&(a.barcodeSettings.barcodeFormatIds=a.barcodeSettings.barcodeFormatIds.toString()),ep(),n=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_UpdateSettings_2(r,es(i),es(JSON.stringify(a)))),ep();_=1===JSON.parse(UTF8ToString(wasmImports.emscripten_bind_CvrWasm_OutputSettings_1(r,es(i)))).CaptureVisionTemplates[0].OutputOriginalImage,handleTaskRes(s,{success:!0,response:n,bNeedOutputOriginalImage:_})}catch(e){handleTaskErr(s,e)}},cvr_resetSettings:async(e,t,s)=>{let r;try{wasmImports.emscripten_bind_CvrWasm_ResetSettings_0(s),ep(),n&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(s,es(n)),ep(),_&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(s,es(_)),ep(),a&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(s,es(a)),ep(),i&&wasmImports.emscripten_bind_CvrWasm_AppendParameterContent_1(s,es(i)),r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_InitParameter_0(s)),handleTaskRes(t,{success:!0,response:r})}catch(e){handleTaskErr(t,e)}},cvr_setIrrRegistry:async(e,t,s)=>{try{ep(),wasmImports.emscripten_bind_CvrWasm_SetIrrRegistry_1(s,es(JSON.stringify(e.receiverObj))),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_enableResultCrossVerification:async(e,t,s)=>{let r;try{r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_EnableResultCrossVerification_2(s,e.type,e.enabled)),handleTaskRes(t,{success:!0,result:r})}catch(e){handleTaskErr(t,e)}},cvr_enableResultDeduplication:async(e,t,s)=>{let r;try{r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_EnableResultDeduplication_2(s,e.type,e.enabled)),handleTaskRes(t,{success:!0,result:r})}catch(e){handleTaskErr(t,e)}},cvr_setDuplicateForgetTime:async(e,t,s)=>{let r;try{r=UTF8ToString(wasmImports.emscripten_bind_CvrWasm_SetDuplicateForgetTime_2(s,e.type,e.time)),handleTaskRes(t,{success:!0,result:r})}catch(e){handleTaskErr(t,e)}},cvr_getDuplicateForgetTime:async(e,t,s)=>{let r;try{r=wasmImports.emscripten_bind_CvrWasm_GetDuplicateForgetTime_1(s,e.type),handleTaskRes(t,{success:!0,time:r})}catch(e){handleTaskErr(t,e)}},cvr_setThresholdValue:async(e,t,s)=>{try{wasmImports.emscripten_bind_CvrWasm_SetThresholdValue_3(s,e.threshold,e.leftLimit,e.rightLimit),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}},cvr_dispose:async(e,t,s)=>{try{wasmImports.emscripten_bind_Destory_CImageData(E),E=null,wasmImports.emscripten_bind_CvrWasm___destroy___0(s),handleTaskRes(t,{success:!0})}catch(e){handleTaskErr(t,e)}}})}();
//# sourceMappingURL=cvr.worker.js.map
